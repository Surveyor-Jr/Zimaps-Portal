# Generated by Django 3.1.6 on 2021-02-17 09:42

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='COVID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
                ('description', models.TextField(help_text='The detailed description of the tool')),
                ('embed_type', models.CharField(blank=True, choices=[('dashboard', 'dashboard'), ('webapp', 'webapp'), ('webmap', 'webmap'), ('survey123', 'survey123'), ('repository', 'repository')], max_length=50, null=True)),
                ('link', models.TextField(max_length=1000)),
                ('external_resource', models.URLField(blank=True, help_text='Specify the original link of the resource that you have just added to the list', null=True)),
            ],
            options={
                'verbose_name_plural': 'COVID-19 Resources',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
                ('content', models.TextField()),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('source', models.CharField(max_length=100)),
                ('source_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'COVID-19 News Feed',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Place the map title here', max_length=30, unique=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='The name of the page you want displayed in the URL e.g https://zimaps.co.zw/map/[the-url-here]', null=True)),
                ('description', models.TextField(help_text='Provide a brief description about your map, how it helps and what is being displayed')),
                ('embed_type', models.CharField(blank=True, choices=[('arcgis', 'ArcGIS'), ('google', 'Google'), ('openstreet', 'OpenStreet'), ('image', 'Image')], max_length=50, null=True)),
                ('link', models.TextField(help_text='Paste the embedding code depending on the platform on which the map is hosted on.', max_length=1000, verbose_name='URL')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collector.category')),
            ],
            options={
                'verbose_name_plural': 'Maps',
            },
        ),
        migrations.CreateModel(
            name='Bucketlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(help_text='Provide a detailed explanation about the map in order for the mappers to get a clear understanding of what you are looking for')),
                ('reference', models.URLField(help_text='Have you seen such a map elsewhere? If yes please provide a link to the source as this will also help the mappers visualize easily', null=True)),
                ('category', models.ForeignKey(help_text='To which category does this map belong to?', on_delete=django.db.models.deletion.CASCADE, to='collector.category')),
            ],
            options={
                'verbose_name_plural': 'Maps BucketList',
            },
        ),
    ]
